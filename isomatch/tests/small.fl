load "ste.fl";

let not =
    bit_input a.
    bit_output b.
    CELL "draw_hier not" [
        b <- '~' a
];

let mix =
    bit_input a.
    bit_output b.
    bit_internal m.
    CELL "draw_hier mix" [
        not a m,
        b <- a '&' m
];

let big =
    bit_input a.
    bit_output b.
    bit_internal m.
    CELL "draw_hier two" [
        mix a m,
        mix m b
];

let p = mix 'a 'b;
let g = big 'a 'b;

let m = isomatch p g;
Emit_isomatch m;

//let p_flat = flatten_pexlif p;
//let g_flat = flatten_pexlif g;

quit;
