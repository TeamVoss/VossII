//-------------------------------------------------------------------
// Copyright 2020 Carl-Johan Seger
// SPDX-License-Identifier: Apache-2.0
//-------------------------------------------------------------------

load "ste.fl";

TYPE "byte" 8;

ENUM "color" ["blue", "red"];


let ckt1 =
        byte_input a b c.
        byte_output out.
        CELL "draw_hier hi" [
        out <- a '+' b '-' c
];


let ckt2 =
        bit_input   clk.
        byte_input  a b.
        byte_output res.
        internal    tmp1 mid.
        CELL "ckt2" [
            tmp1 <- a '-' b,
            ckt1 a tmp1 (a '*' b) mid,
            re_ff clk mid res
];


let p = ckt2 'clk 'a 'b 'res;

let ckt = pexlif2fsm p;
let vis = STE_debug ckt;
vis;

let ant =
    "clk" is_clock 3 
  and
    "a[7:0]" is "0x23" for 1 cycle followed_by "A[7:0]" for 1 cycle
  and
    "b[7:0]" is "0x14" for 1 cycle followed_by "0x1" for 1 cycle
;

STE "-e" vis [] ant [] [];

