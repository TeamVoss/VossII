Grammar

    0 $accept: input $end

    1 $@1: %empty

    2 input: optional_eol $@1 design

    3 EOL: optional_eol TOK_EOL

    4 optional_eol: optional_eol TOK_EOL
    5             | %empty

    6 design: design module
    7       | design attr_stmt
    8       | design autoidx_stmt
    9       | %empty

   10 $@2: %empty

   11 $@3: %empty

   12 module: TOK_MODULE TOK_ID EOL $@2 module_body TOK_END $@3 EOL

   13 module_body: module_body module_stmt
   14            | %empty

   15 module_stmt: param_stmt
   16            | param_defval_stmt
   17            | attr_stmt
   18            | wire_stmt
   19            | memory_stmt
   20            | cell_stmt
   21            | proc_stmt
   22            | conn_stmt

   23 param_stmt: TOK_PARAMETER TOK_ID EOL

   24 param_defval_stmt: TOK_PARAMETER TOK_ID constant EOL

   25 attr_stmt: TOK_ATTRIBUTE TOK_ID constant EOL

   26 autoidx_stmt: TOK_AUTOIDX TOK_INT EOL

   27 $@4: %empty

   28 wire_stmt: TOK_WIRE $@4 wire_options TOK_ID EOL

   29 wire_options: wire_options TOK_WIDTH TOK_INT
   30             | wire_options TOK_WIDTH TOK_INVALID
   31             | wire_options TOK_UPTO
   32             | wire_options TOK_SIGNED
   33             | wire_options TOK_OFFSET TOK_INT
   34             | wire_options TOK_INPUT TOK_INT
   35             | wire_options TOK_OUTPUT TOK_INT
   36             | wire_options TOK_INOUT TOK_INT
   37             | %empty

   38 $@5: %empty

   39 memory_stmt: TOK_MEMORY $@5 memory_options TOK_ID EOL

   40 memory_options: memory_options TOK_WIDTH TOK_INT
   41               | memory_options TOK_SIZE TOK_INT
   42               | memory_options TOK_OFFSET TOK_INT
   43               | %empty

   44 $@6: %empty

   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL $@6 cell_body TOK_END EOL

   46 cell_body: cell_body TOK_PARAMETER TOK_ID constant EOL
   47          | cell_body TOK_PARAMETER TOK_SIGNED TOK_ID constant EOL
   48          | cell_body TOK_PARAMETER TOK_REAL TOK_ID constant EOL
   49          | cell_body TOK_CONNECT TOK_ID sigspec EOL
   50          | %empty

   51 $@7: %empty

   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 case_body sync_list TOK_END EOL

   53 $@8: %empty

   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 attr_list switch_body TOK_END EOL

   55 attr_list: %empty
   56          | attr_list attr_stmt

   57 $@9: %empty

   58 switch_body: switch_body TOK_CASE $@9 compare_list EOL case_body
   59            | %empty

   60 compare_list: sigspec
   61             | compare_list ',' sigspec
   62             | %empty

   63 case_body: case_body attr_stmt
   64          | case_body switch_stmt
   65          | case_body assign_stmt
   66          | %empty

   67 assign_stmt: TOK_ASSIGN sigspec sigspec EOL

   68 $@10: %empty

   69 sync_list: sync_list TOK_SYNC sync_type sigspec EOL $@10 update_list

   70 $@11: %empty

   71 sync_list: sync_list TOK_SYNC TOK_ALWAYS EOL $@11 update_list

   72 $@12: %empty

   73 sync_list: sync_list TOK_SYNC TOK_GLOBAL EOL $@12 update_list

   74 $@13: %empty

   75 sync_list: sync_list TOK_SYNC TOK_INIT EOL $@13 update_list
   76          | %empty

   77 sync_type: TOK_LOW
   78          | TOK_HIGH
   79          | TOK_POSEDGE
   80          | TOK_NEGEDGE
   81          | TOK_EDGE

   82 update_list: update_list TOK_UPDATE sigspec sigspec EOL
   83            | %empty

   84 constant: TOK_VALUE
   85         | TOK_INT
   86         | TOK_STRING

   87 sigspec: constant
   88        | TOK_ID
   89        | sigspec '[' TOK_INT ']'
   90        | sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | '{' sigspec_list '}'

   92 sigspec_list_reversed: sigspec_list_reversed sigspec
   93                      | %empty

   94 sigspec_list: sigspec_list_reversed

   95 conn_stmt: TOK_CONNECT sigspec sigspec EOL


Terminals, with rules where they appear

$end (0) 0
',' (44) 61
':' (58) 90
'[' (91) 89 90
']' (93) 89 90
'{' (123) 91
'}' (125) 91
error (256)
TOK_ID (258) 12 23 24 25 28 39 45 46 47 48 49 52 88
TOK_VALUE (259) 84
TOK_STRING (260) 86
TOK_INT (261) 26 29 33 34 35 36 40 41 42 85 89 90
TOK_AUTOIDX (262) 26
TOK_MODULE (263) 12
TOK_WIRE (264) 28
TOK_WIDTH (265) 29 30 40
TOK_INPUT (266) 34
TOK_OUTPUT (267) 35
TOK_INOUT (268) 36
TOK_CELL (269) 45
TOK_CONNECT (270) 49 95
TOK_SWITCH (271) 54
TOK_CASE (272) 58
TOK_ASSIGN (273) 67
TOK_SYNC (274) 69 71 73 75
TOK_LOW (275) 77
TOK_HIGH (276) 78
TOK_POSEDGE (277) 79
TOK_NEGEDGE (278) 80
TOK_EDGE (279) 81
TOK_ALWAYS (280) 71
TOK_GLOBAL (281) 73
TOK_INIT (282) 75
TOK_UPDATE (283) 82
TOK_PROCESS (284) 52
TOK_END (285) 12 45 52 54
TOK_INVALID (286) 30
TOK_EOL (287) 3 4
TOK_OFFSET (288) 33 42
TOK_PARAMETER (289) 23 24 46 47 48
TOK_ATTRIBUTE (290) 25
TOK_MEMORY (291) 39
TOK_SIZE (292) 41
TOK_SIGNED (293) 32 47
TOK_REAL (294) 48
TOK_UPTO (295) 31


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
input (48)
    on left: 2, on right: 0
$@1 (49)
    on left: 1, on right: 2
EOL (50)
    on left: 3, on right: 12 23 24 25 26 28 39 45 46 47 48 49 52 54
    58 67 69 71 73 75 82 95
optional_eol (51)
    on left: 4 5, on right: 2 3 4
design (52)
    on left: 6 7 8 9, on right: 2 6 7 8
module (53)
    on left: 12, on right: 6
$@2 (54)
    on left: 10, on right: 12
$@3 (55)
    on left: 11, on right: 12
module_body (56)
    on left: 13 14, on right: 12 13
module_stmt (57)
    on left: 15 16 17 18 19 20 21 22, on right: 13
param_stmt (58)
    on left: 23, on right: 15
param_defval_stmt (59)
    on left: 24, on right: 16
attr_stmt (60)
    on left: 25, on right: 7 17 56 63
autoidx_stmt (61)
    on left: 26, on right: 8
wire_stmt (62)
    on left: 28, on right: 18
$@4 (63)
    on left: 27, on right: 28
wire_options (64)
    on left: 29 30 31 32 33 34 35 36 37, on right: 28 29 30 31 32 33
    34 35 36
memory_stmt (65)
    on left: 39, on right: 19
$@5 (66)
    on left: 38, on right: 39
memory_options (67)
    on left: 40 41 42 43, on right: 39 40 41 42
cell_stmt (68)
    on left: 45, on right: 20
$@6 (69)
    on left: 44, on right: 45
cell_body (70)
    on left: 46 47 48 49 50, on right: 45 46 47 48 49
proc_stmt (71)
    on left: 52, on right: 21
$@7 (72)
    on left: 51, on right: 52
switch_stmt (73)
    on left: 54, on right: 64
$@8 (74)
    on left: 53, on right: 54
attr_list (75)
    on left: 55 56, on right: 54 56
switch_body (76)
    on left: 58 59, on right: 54 58
$@9 (77)
    on left: 57, on right: 58
compare_list (78)
    on left: 60 61 62, on right: 58 61
case_body (79)
    on left: 63 64 65 66, on right: 52 58 63 64 65
assign_stmt (80)
    on left: 67, on right: 65
sync_list (81)
    on left: 69 71 73 75 76, on right: 52 69 71 73 75
$@10 (82)
    on left: 68, on right: 69
$@11 (83)
    on left: 70, on right: 71
$@12 (84)
    on left: 72, on right: 73
$@13 (85)
    on left: 74, on right: 75
sync_type (86)
    on left: 77 78 79 80 81, on right: 69
update_list (87)
    on left: 82 83, on right: 69 71 73 75 82
constant (88)
    on left: 84 85 86, on right: 24 25 46 47 48 87
sigspec (89)
    on left: 87 88 89 90 91, on right: 49 54 60 61 67 69 82 89 90 92
    95
sigspec_list_reversed (90)
    on left: 92 93, on right: 92 94
sigspec_list (91)
    on left: 94, on right: 91
conn_stmt (92)
    on left: 95, on right: 22


State 0

    0 $accept: . input $end
    2 input: . optional_eol $@1 design
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty

    $default  reduce using rule 5 (optional_eol)

    input         go to state 1
    optional_eol  go to state 2


State 1

    0 $accept: input . $end

    $end  shift, and go to state 3


State 2

    1 $@1: . %empty  [$end, TOK_AUTOIDX, TOK_MODULE, TOK_ATTRIBUTE]
    2 input: optional_eol . $@1 design
    4 optional_eol: optional_eol . TOK_EOL

    TOK_EOL  shift, and go to state 4

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 3

    0 $accept: input $end .

    $default  accept


State 4

    4 optional_eol: optional_eol TOK_EOL .

    $default  reduce using rule 4 (optional_eol)


State 5

    2 input: optional_eol $@1 . design
    6 design: . design module
    7       | . design attr_stmt
    8       | . design autoidx_stmt
    9       | . %empty

    $default  reduce using rule 9 (design)

    design  go to state 6


State 6

    2 input: optional_eol $@1 design .  [$end]
    6 design: design . module
    7       | design . attr_stmt
    8       | design . autoidx_stmt
   12 module: . TOK_MODULE TOK_ID EOL $@2 module_body TOK_END $@3 EOL
   25 attr_stmt: . TOK_ATTRIBUTE TOK_ID constant EOL
   26 autoidx_stmt: . TOK_AUTOIDX TOK_INT EOL

    TOK_AUTOIDX    shift, and go to state 7
    TOK_MODULE     shift, and go to state 8
    TOK_ATTRIBUTE  shift, and go to state 9

    $default  reduce using rule 2 (input)

    module        go to state 10
    attr_stmt     go to state 11
    autoidx_stmt  go to state 12


State 7

   26 autoidx_stmt: TOK_AUTOIDX . TOK_INT EOL

    TOK_INT  shift, and go to state 13


State 8

   12 module: TOK_MODULE . TOK_ID EOL $@2 module_body TOK_END $@3 EOL

    TOK_ID  shift, and go to state 14


State 9

   25 attr_stmt: TOK_ATTRIBUTE . TOK_ID constant EOL

    TOK_ID  shift, and go to state 15


State 10

    6 design: design module .

    $default  reduce using rule 6 (design)


State 11

    7 design: design attr_stmt .

    $default  reduce using rule 7 (design)


State 12

    8 design: design autoidx_stmt .

    $default  reduce using rule 8 (design)


State 13

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   26 autoidx_stmt: TOK_AUTOIDX TOK_INT . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 16
    optional_eol  go to state 17


State 14

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   12 module: TOK_MODULE TOK_ID . EOL $@2 module_body TOK_END $@3 EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 18
    optional_eol  go to state 17


State 15

   25 attr_stmt: TOK_ATTRIBUTE TOK_ID . constant EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING

    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21

    constant  go to state 22


State 16

   26 autoidx_stmt: TOK_AUTOIDX TOK_INT EOL .

    $default  reduce using rule 26 (autoidx_stmt)


State 17

    3 EOL: optional_eol . TOK_EOL
    4 optional_eol: optional_eol . TOK_EOL

    TOK_EOL  shift, and go to state 23


State 18

   10 $@2: . %empty
   12 module: TOK_MODULE TOK_ID EOL . $@2 module_body TOK_END $@3 EOL

    $default  reduce using rule 10 ($@2)

    $@2  go to state 24


State 19

   84 constant: TOK_VALUE .

    $default  reduce using rule 84 (constant)


State 20

   86 constant: TOK_STRING .

    $default  reduce using rule 86 (constant)


State 21

   85 constant: TOK_INT .

    $default  reduce using rule 85 (constant)


State 22

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   25 attr_stmt: TOK_ATTRIBUTE TOK_ID constant . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 25
    optional_eol  go to state 17


State 23

    3 EOL: optional_eol TOK_EOL .  [$end, TOK_AUTOIDX, TOK_MODULE, TOK_WIRE, TOK_CELL, TOK_CONNECT, TOK_SWITCH, TOK_CASE, TOK_ASSIGN, TOK_SYNC, TOK_UPDATE, TOK_PROCESS, TOK_END, TOK_PARAMETER, TOK_ATTRIBUTE, TOK_MEMORY]
    4 optional_eol: optional_eol TOK_EOL .  [TOK_EOL]

    TOK_EOL   reduce using rule 4 (optional_eol)
    $default  reduce using rule 3 (EOL)


State 24

   12 module: TOK_MODULE TOK_ID EOL $@2 . module_body TOK_END $@3 EOL
   13 module_body: . module_body module_stmt
   14            | . %empty

    $default  reduce using rule 14 (module_body)

    module_body  go to state 26


State 25

   25 attr_stmt: TOK_ATTRIBUTE TOK_ID constant EOL .

    $default  reduce using rule 25 (attr_stmt)


State 26

   12 module: TOK_MODULE TOK_ID EOL $@2 module_body . TOK_END $@3 EOL
   13 module_body: module_body . module_stmt
   15 module_stmt: . param_stmt
   16            | . param_defval_stmt
   17            | . attr_stmt
   18            | . wire_stmt
   19            | . memory_stmt
   20            | . cell_stmt
   21            | . proc_stmt
   22            | . conn_stmt
   23 param_stmt: . TOK_PARAMETER TOK_ID EOL
   24 param_defval_stmt: . TOK_PARAMETER TOK_ID constant EOL
   25 attr_stmt: . TOK_ATTRIBUTE TOK_ID constant EOL
   28 wire_stmt: . TOK_WIRE $@4 wire_options TOK_ID EOL
   39 memory_stmt: . TOK_MEMORY $@5 memory_options TOK_ID EOL
   45 cell_stmt: . TOK_CELL TOK_ID TOK_ID EOL $@6 cell_body TOK_END EOL
   52 proc_stmt: . TOK_PROCESS TOK_ID EOL $@7 case_body sync_list TOK_END EOL
   95 conn_stmt: . TOK_CONNECT sigspec sigspec EOL

    TOK_WIRE       shift, and go to state 27
    TOK_CELL       shift, and go to state 28
    TOK_CONNECT    shift, and go to state 29
    TOK_PROCESS    shift, and go to state 30
    TOK_END        shift, and go to state 31
    TOK_PARAMETER  shift, and go to state 32
    TOK_ATTRIBUTE  shift, and go to state 9
    TOK_MEMORY     shift, and go to state 33

    module_stmt        go to state 34
    param_stmt         go to state 35
    param_defval_stmt  go to state 36
    attr_stmt          go to state 37
    wire_stmt          go to state 38
    memory_stmt        go to state 39
    cell_stmt          go to state 40
    proc_stmt          go to state 41
    conn_stmt          go to state 42


State 27

   27 $@4: . %empty
   28 wire_stmt: TOK_WIRE . $@4 wire_options TOK_ID EOL

    $default  reduce using rule 27 ($@4)

    $@4  go to state 43


State 28

   45 cell_stmt: TOK_CELL . TOK_ID TOK_ID EOL $@6 cell_body TOK_END EOL

    TOK_ID  shift, and go to state 44


State 29

   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'
   95 conn_stmt: TOK_CONNECT . sigspec sigspec EOL

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 48


State 30

   52 proc_stmt: TOK_PROCESS . TOK_ID EOL $@7 case_body sync_list TOK_END EOL

    TOK_ID  shift, and go to state 49


State 31

   11 $@3: . %empty
   12 module: TOK_MODULE TOK_ID EOL $@2 module_body TOK_END . $@3 EOL

    $default  reduce using rule 11 ($@3)

    $@3  go to state 50


State 32

   23 param_stmt: TOK_PARAMETER . TOK_ID EOL
   24 param_defval_stmt: TOK_PARAMETER . TOK_ID constant EOL

    TOK_ID  shift, and go to state 51


State 33

   38 $@5: . %empty
   39 memory_stmt: TOK_MEMORY . $@5 memory_options TOK_ID EOL

    $default  reduce using rule 38 ($@5)

    $@5  go to state 52


State 34

   13 module_body: module_body module_stmt .

    $default  reduce using rule 13 (module_body)


State 35

   15 module_stmt: param_stmt .

    $default  reduce using rule 15 (module_stmt)


State 36

   16 module_stmt: param_defval_stmt .

    $default  reduce using rule 16 (module_stmt)


State 37

   17 module_stmt: attr_stmt .

    $default  reduce using rule 17 (module_stmt)


State 38

   18 module_stmt: wire_stmt .

    $default  reduce using rule 18 (module_stmt)


State 39

   19 module_stmt: memory_stmt .

    $default  reduce using rule 19 (module_stmt)


State 40

   20 module_stmt: cell_stmt .

    $default  reduce using rule 20 (module_stmt)


State 41

   21 module_stmt: proc_stmt .

    $default  reduce using rule 21 (module_stmt)


State 42

   22 module_stmt: conn_stmt .

    $default  reduce using rule 22 (module_stmt)


State 43

   28 wire_stmt: TOK_WIRE $@4 . wire_options TOK_ID EOL
   29 wire_options: . wire_options TOK_WIDTH TOK_INT
   30             | . wire_options TOK_WIDTH TOK_INVALID
   31             | . wire_options TOK_UPTO
   32             | . wire_options TOK_SIGNED
   33             | . wire_options TOK_OFFSET TOK_INT
   34             | . wire_options TOK_INPUT TOK_INT
   35             | . wire_options TOK_OUTPUT TOK_INT
   36             | . wire_options TOK_INOUT TOK_INT
   37             | . %empty

    $default  reduce using rule 37 (wire_options)

    wire_options  go to state 53


State 44

   45 cell_stmt: TOK_CELL TOK_ID . TOK_ID EOL $@6 cell_body TOK_END EOL

    TOK_ID  shift, and go to state 54


State 45

   88 sigspec: TOK_ID .

    $default  reduce using rule 88 (sigspec)


State 46

   91 sigspec: '{' . sigspec_list '}'
   92 sigspec_list_reversed: . sigspec_list_reversed sigspec
   93                      | . %empty
   94 sigspec_list: . sigspec_list_reversed

    $default  reduce using rule 93 (sigspec_list_reversed)

    sigspec_list_reversed  go to state 55
    sigspec_list           go to state 56


State 47

   87 sigspec: constant .

    $default  reduce using rule 87 (sigspec)


State 48

   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   89        | sigspec . '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'
   95 conn_stmt: TOK_CONNECT sigspec . sigspec EOL

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '['         shift, and go to state 57
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 58


State 49

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   52 proc_stmt: TOK_PROCESS TOK_ID . EOL $@7 case_body sync_list TOK_END EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 59
    optional_eol  go to state 17


State 50

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   12 module: TOK_MODULE TOK_ID EOL $@2 module_body TOK_END $@3 . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 60
    optional_eol  go to state 17


State 51

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   23 param_stmt: TOK_PARAMETER TOK_ID . EOL
   24 param_defval_stmt: TOK_PARAMETER TOK_ID . constant EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING

    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 61
    optional_eol  go to state 17
    constant      go to state 62


State 52

   39 memory_stmt: TOK_MEMORY $@5 . memory_options TOK_ID EOL
   40 memory_options: . memory_options TOK_WIDTH TOK_INT
   41               | . memory_options TOK_SIZE TOK_INT
   42               | . memory_options TOK_OFFSET TOK_INT
   43               | . %empty

    $default  reduce using rule 43 (memory_options)

    memory_options  go to state 63


State 53

   28 wire_stmt: TOK_WIRE $@4 wire_options . TOK_ID EOL
   29 wire_options: wire_options . TOK_WIDTH TOK_INT
   30             | wire_options . TOK_WIDTH TOK_INVALID
   31             | wire_options . TOK_UPTO
   32             | wire_options . TOK_SIGNED
   33             | wire_options . TOK_OFFSET TOK_INT
   34             | wire_options . TOK_INPUT TOK_INT
   35             | wire_options . TOK_OUTPUT TOK_INT
   36             | wire_options . TOK_INOUT TOK_INT

    TOK_ID      shift, and go to state 64
    TOK_WIDTH   shift, and go to state 65
    TOK_INPUT   shift, and go to state 66
    TOK_OUTPUT  shift, and go to state 67
    TOK_INOUT   shift, and go to state 68
    TOK_OFFSET  shift, and go to state 69
    TOK_SIGNED  shift, and go to state 70
    TOK_UPTO    shift, and go to state 71


State 54

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   45 cell_stmt: TOK_CELL TOK_ID TOK_ID . EOL $@6 cell_body TOK_END EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 72
    optional_eol  go to state 17


State 55

   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'
   92 sigspec_list_reversed: sigspec_list_reversed . sigspec
   94 sigspec_list: sigspec_list_reversed .  ['}']

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    $default  reduce using rule 94 (sigspec_list)

    constant  go to state 47
    sigspec   go to state 73


State 56

   91 sigspec: '{' sigspec_list . '}'

    '}'  shift, and go to state 74


State 57

   89 sigspec: sigspec '[' . TOK_INT ']'
   90        | sigspec '[' . TOK_INT ':' TOK_INT ']'

    TOK_INT  shift, and go to state 75


State 58

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'
   95 conn_stmt: TOK_CONNECT sigspec sigspec . EOL

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 76
    optional_eol  go to state 17


State 59

   51 $@7: . %empty
   52 proc_stmt: TOK_PROCESS TOK_ID EOL . $@7 case_body sync_list TOK_END EOL

    $default  reduce using rule 51 ($@7)

    $@7  go to state 77


State 60

   12 module: TOK_MODULE TOK_ID EOL $@2 module_body TOK_END $@3 EOL .

    $default  reduce using rule 12 (module)


State 61

   23 param_stmt: TOK_PARAMETER TOK_ID EOL .

    $default  reduce using rule 23 (param_stmt)


State 62

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   24 param_defval_stmt: TOK_PARAMETER TOK_ID constant . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 78
    optional_eol  go to state 17


State 63

   39 memory_stmt: TOK_MEMORY $@5 memory_options . TOK_ID EOL
   40 memory_options: memory_options . TOK_WIDTH TOK_INT
   41               | memory_options . TOK_SIZE TOK_INT
   42               | memory_options . TOK_OFFSET TOK_INT

    TOK_ID      shift, and go to state 79
    TOK_WIDTH   shift, and go to state 80
    TOK_OFFSET  shift, and go to state 81
    TOK_SIZE    shift, and go to state 82


State 64

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   28 wire_stmt: TOK_WIRE $@4 wire_options TOK_ID . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 83
    optional_eol  go to state 17


State 65

   29 wire_options: wire_options TOK_WIDTH . TOK_INT
   30             | wire_options TOK_WIDTH . TOK_INVALID

    TOK_INT      shift, and go to state 84
    TOK_INVALID  shift, and go to state 85


State 66

   34 wire_options: wire_options TOK_INPUT . TOK_INT

    TOK_INT  shift, and go to state 86


State 67

   35 wire_options: wire_options TOK_OUTPUT . TOK_INT

    TOK_INT  shift, and go to state 87


State 68

   36 wire_options: wire_options TOK_INOUT . TOK_INT

    TOK_INT  shift, and go to state 88


State 69

   33 wire_options: wire_options TOK_OFFSET . TOK_INT

    TOK_INT  shift, and go to state 89


State 70

   32 wire_options: wire_options TOK_SIGNED .

    $default  reduce using rule 32 (wire_options)


State 71

   31 wire_options: wire_options TOK_UPTO .

    $default  reduce using rule 31 (wire_options)


State 72

   44 $@6: . %empty
   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL . $@6 cell_body TOK_END EOL

    $default  reduce using rule 44 ($@6)

    $@6  go to state 90


State 73

   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'
   92 sigspec_list_reversed: sigspec_list_reversed sigspec .  [TOK_ID, TOK_VALUE, TOK_STRING, TOK_INT, '{', '}']

    '['  shift, and go to state 57

    $default  reduce using rule 92 (sigspec_list_reversed)


State 74

   91 sigspec: '{' sigspec_list '}' .

    $default  reduce using rule 91 (sigspec)


State 75

   89 sigspec: sigspec '[' TOK_INT . ']'
   90        | sigspec '[' TOK_INT . ':' TOK_INT ']'

    ']'  shift, and go to state 91
    ':'  shift, and go to state 92


State 76

   95 conn_stmt: TOK_CONNECT sigspec sigspec EOL .

    $default  reduce using rule 95 (conn_stmt)


State 77

   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 . case_body sync_list TOK_END EOL
   63 case_body: . case_body attr_stmt
   64          | . case_body switch_stmt
   65          | . case_body assign_stmt
   66          | . %empty

    $default  reduce using rule 66 (case_body)

    case_body  go to state 93


State 78

   24 param_defval_stmt: TOK_PARAMETER TOK_ID constant EOL .

    $default  reduce using rule 24 (param_defval_stmt)


State 79

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   39 memory_stmt: TOK_MEMORY $@5 memory_options TOK_ID . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 94
    optional_eol  go to state 17


State 80

   40 memory_options: memory_options TOK_WIDTH . TOK_INT

    TOK_INT  shift, and go to state 95


State 81

   42 memory_options: memory_options TOK_OFFSET . TOK_INT

    TOK_INT  shift, and go to state 96


State 82

   41 memory_options: memory_options TOK_SIZE . TOK_INT

    TOK_INT  shift, and go to state 97


State 83

   28 wire_stmt: TOK_WIRE $@4 wire_options TOK_ID EOL .

    $default  reduce using rule 28 (wire_stmt)


State 84

   29 wire_options: wire_options TOK_WIDTH TOK_INT .

    $default  reduce using rule 29 (wire_options)


State 85

   30 wire_options: wire_options TOK_WIDTH TOK_INVALID .

    $default  reduce using rule 30 (wire_options)


State 86

   34 wire_options: wire_options TOK_INPUT TOK_INT .

    $default  reduce using rule 34 (wire_options)


State 87

   35 wire_options: wire_options TOK_OUTPUT TOK_INT .

    $default  reduce using rule 35 (wire_options)


State 88

   36 wire_options: wire_options TOK_INOUT TOK_INT .

    $default  reduce using rule 36 (wire_options)


State 89

   33 wire_options: wire_options TOK_OFFSET TOK_INT .

    $default  reduce using rule 33 (wire_options)


State 90

   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL $@6 . cell_body TOK_END EOL
   46 cell_body: . cell_body TOK_PARAMETER TOK_ID constant EOL
   47          | . cell_body TOK_PARAMETER TOK_SIGNED TOK_ID constant EOL
   48          | . cell_body TOK_PARAMETER TOK_REAL TOK_ID constant EOL
   49          | . cell_body TOK_CONNECT TOK_ID sigspec EOL
   50          | . %empty

    $default  reduce using rule 50 (cell_body)

    cell_body  go to state 98


State 91

   89 sigspec: sigspec '[' TOK_INT ']' .

    $default  reduce using rule 89 (sigspec)


State 92

   90 sigspec: sigspec '[' TOK_INT ':' . TOK_INT ']'

    TOK_INT  shift, and go to state 99


State 93

   25 attr_stmt: . TOK_ATTRIBUTE TOK_ID constant EOL
   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 case_body . sync_list TOK_END EOL
   54 switch_stmt: . TOK_SWITCH sigspec EOL $@8 attr_list switch_body TOK_END EOL
   63 case_body: case_body . attr_stmt
   64          | case_body . switch_stmt
   65          | case_body . assign_stmt
   67 assign_stmt: . TOK_ASSIGN sigspec sigspec EOL
   69 sync_list: . sync_list TOK_SYNC sync_type sigspec EOL $@10 update_list
   71          | . sync_list TOK_SYNC TOK_ALWAYS EOL $@11 update_list
   73          | . sync_list TOK_SYNC TOK_GLOBAL EOL $@12 update_list
   75          | . sync_list TOK_SYNC TOK_INIT EOL $@13 update_list
   76          | . %empty  [TOK_SYNC, TOK_END]

    TOK_SWITCH     shift, and go to state 100
    TOK_ASSIGN     shift, and go to state 101
    TOK_ATTRIBUTE  shift, and go to state 9

    $default  reduce using rule 76 (sync_list)

    attr_stmt    go to state 102
    switch_stmt  go to state 103
    assign_stmt  go to state 104
    sync_list    go to state 105


State 94

   39 memory_stmt: TOK_MEMORY $@5 memory_options TOK_ID EOL .

    $default  reduce using rule 39 (memory_stmt)


State 95

   40 memory_options: memory_options TOK_WIDTH TOK_INT .

    $default  reduce using rule 40 (memory_options)


State 96

   42 memory_options: memory_options TOK_OFFSET TOK_INT .

    $default  reduce using rule 42 (memory_options)


State 97

   41 memory_options: memory_options TOK_SIZE TOK_INT .

    $default  reduce using rule 41 (memory_options)


State 98

   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL $@6 cell_body . TOK_END EOL
   46 cell_body: cell_body . TOK_PARAMETER TOK_ID constant EOL
   47          | cell_body . TOK_PARAMETER TOK_SIGNED TOK_ID constant EOL
   48          | cell_body . TOK_PARAMETER TOK_REAL TOK_ID constant EOL
   49          | cell_body . TOK_CONNECT TOK_ID sigspec EOL

    TOK_CONNECT    shift, and go to state 106
    TOK_END        shift, and go to state 107
    TOK_PARAMETER  shift, and go to state 108


State 99

   90 sigspec: sigspec '[' TOK_INT ':' TOK_INT . ']'

    ']'  shift, and go to state 109


State 100

   54 switch_stmt: TOK_SWITCH . sigspec EOL $@8 attr_list switch_body TOK_END EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 110


State 101

   67 assign_stmt: TOK_ASSIGN . sigspec sigspec EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 111


State 102

   63 case_body: case_body attr_stmt .

    $default  reduce using rule 63 (case_body)


State 103

   64 case_body: case_body switch_stmt .

    $default  reduce using rule 64 (case_body)


State 104

   65 case_body: case_body assign_stmt .

    $default  reduce using rule 65 (case_body)


State 105

   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 case_body sync_list . TOK_END EOL
   69 sync_list: sync_list . TOK_SYNC sync_type sigspec EOL $@10 update_list
   71          | sync_list . TOK_SYNC TOK_ALWAYS EOL $@11 update_list
   73          | sync_list . TOK_SYNC TOK_GLOBAL EOL $@12 update_list
   75          | sync_list . TOK_SYNC TOK_INIT EOL $@13 update_list

    TOK_SYNC  shift, and go to state 112
    TOK_END   shift, and go to state 113


State 106

   49 cell_body: cell_body TOK_CONNECT . TOK_ID sigspec EOL

    TOK_ID  shift, and go to state 114


State 107

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL $@6 cell_body TOK_END . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 115
    optional_eol  go to state 17


State 108

   46 cell_body: cell_body TOK_PARAMETER . TOK_ID constant EOL
   47          | cell_body TOK_PARAMETER . TOK_SIGNED TOK_ID constant EOL
   48          | cell_body TOK_PARAMETER . TOK_REAL TOK_ID constant EOL

    TOK_ID      shift, and go to state 116
    TOK_SIGNED  shift, and go to state 117
    TOK_REAL    shift, and go to state 118


State 109

   90 sigspec: sigspec '[' TOK_INT ':' TOK_INT ']' .

    $default  reduce using rule 90 (sigspec)


State 110

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   54 switch_stmt: TOK_SWITCH sigspec . EOL $@8 attr_list switch_body TOK_END EOL
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 119
    optional_eol  go to state 17


State 111

   67 assign_stmt: TOK_ASSIGN sigspec . sigspec EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   89        | sigspec . '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '['         shift, and go to state 57
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 120


State 112

   69 sync_list: sync_list TOK_SYNC . sync_type sigspec EOL $@10 update_list
   71          | sync_list TOK_SYNC . TOK_ALWAYS EOL $@11 update_list
   73          | sync_list TOK_SYNC . TOK_GLOBAL EOL $@12 update_list
   75          | sync_list TOK_SYNC . TOK_INIT EOL $@13 update_list
   77 sync_type: . TOK_LOW
   78          | . TOK_HIGH
   79          | . TOK_POSEDGE
   80          | . TOK_NEGEDGE
   81          | . TOK_EDGE

    TOK_LOW      shift, and go to state 121
    TOK_HIGH     shift, and go to state 122
    TOK_POSEDGE  shift, and go to state 123
    TOK_NEGEDGE  shift, and go to state 124
    TOK_EDGE     shift, and go to state 125
    TOK_ALWAYS   shift, and go to state 126
    TOK_GLOBAL   shift, and go to state 127
    TOK_INIT     shift, and go to state 128

    sync_type  go to state 129


State 113

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 case_body sync_list TOK_END . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 130
    optional_eol  go to state 17


State 114

   49 cell_body: cell_body TOK_CONNECT TOK_ID . sigspec EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 131


State 115

   45 cell_stmt: TOK_CELL TOK_ID TOK_ID EOL $@6 cell_body TOK_END EOL .

    $default  reduce using rule 45 (cell_stmt)


State 116

   46 cell_body: cell_body TOK_PARAMETER TOK_ID . constant EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING

    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21

    constant  go to state 132


State 117

   47 cell_body: cell_body TOK_PARAMETER TOK_SIGNED . TOK_ID constant EOL

    TOK_ID  shift, and go to state 133


State 118

   48 cell_body: cell_body TOK_PARAMETER TOK_REAL . TOK_ID constant EOL

    TOK_ID  shift, and go to state 134


State 119

   53 $@8: . %empty
   54 switch_stmt: TOK_SWITCH sigspec EOL . $@8 attr_list switch_body TOK_END EOL

    $default  reduce using rule 53 ($@8)

    $@8  go to state 135


State 120

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   67 assign_stmt: TOK_ASSIGN sigspec sigspec . EOL
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 136
    optional_eol  go to state 17


State 121

   77 sync_type: TOK_LOW .

    $default  reduce using rule 77 (sync_type)


State 122

   78 sync_type: TOK_HIGH .

    $default  reduce using rule 78 (sync_type)


State 123

   79 sync_type: TOK_POSEDGE .

    $default  reduce using rule 79 (sync_type)


State 124

   80 sync_type: TOK_NEGEDGE .

    $default  reduce using rule 80 (sync_type)


State 125

   81 sync_type: TOK_EDGE .

    $default  reduce using rule 81 (sync_type)


State 126

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   71 sync_list: sync_list TOK_SYNC TOK_ALWAYS . EOL $@11 update_list

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 137
    optional_eol  go to state 17


State 127

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   73 sync_list: sync_list TOK_SYNC TOK_GLOBAL . EOL $@12 update_list

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 138
    optional_eol  go to state 17


State 128

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   75 sync_list: sync_list TOK_SYNC TOK_INIT . EOL $@13 update_list

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 139
    optional_eol  go to state 17


State 129

   69 sync_list: sync_list TOK_SYNC sync_type . sigspec EOL $@10 update_list
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 140


State 130

   52 proc_stmt: TOK_PROCESS TOK_ID EOL $@7 case_body sync_list TOK_END EOL .

    $default  reduce using rule 52 (proc_stmt)


State 131

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   49 cell_body: cell_body TOK_CONNECT TOK_ID sigspec . EOL
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 141
    optional_eol  go to state 17


State 132

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   46 cell_body: cell_body TOK_PARAMETER TOK_ID constant . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 142
    optional_eol  go to state 17


State 133

   47 cell_body: cell_body TOK_PARAMETER TOK_SIGNED TOK_ID . constant EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING

    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21

    constant  go to state 143


State 134

   48 cell_body: cell_body TOK_PARAMETER TOK_REAL TOK_ID . constant EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING

    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21

    constant  go to state 144


State 135

   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 . attr_list switch_body TOK_END EOL
   55 attr_list: . %empty
   56          | . attr_list attr_stmt

    $default  reduce using rule 55 (attr_list)

    attr_list  go to state 145


State 136

   67 assign_stmt: TOK_ASSIGN sigspec sigspec EOL .

    $default  reduce using rule 67 (assign_stmt)


State 137

   70 $@11: . %empty
   71 sync_list: sync_list TOK_SYNC TOK_ALWAYS EOL . $@11 update_list

    $default  reduce using rule 70 ($@11)

    $@11  go to state 146


State 138

   72 $@12: . %empty
   73 sync_list: sync_list TOK_SYNC TOK_GLOBAL EOL . $@12 update_list

    $default  reduce using rule 72 ($@12)

    $@12  go to state 147


State 139

   74 $@13: . %empty
   75 sync_list: sync_list TOK_SYNC TOK_INIT EOL . $@13 update_list

    $default  reduce using rule 74 ($@13)

    $@13  go to state 148


State 140

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   69 sync_list: sync_list TOK_SYNC sync_type sigspec . EOL $@10 update_list
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 149
    optional_eol  go to state 17


State 141

   49 cell_body: cell_body TOK_CONNECT TOK_ID sigspec EOL .

    $default  reduce using rule 49 (cell_body)


State 142

   46 cell_body: cell_body TOK_PARAMETER TOK_ID constant EOL .

    $default  reduce using rule 46 (cell_body)


State 143

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   47 cell_body: cell_body TOK_PARAMETER TOK_SIGNED TOK_ID constant . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 150
    optional_eol  go to state 17


State 144

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   48 cell_body: cell_body TOK_PARAMETER TOK_REAL TOK_ID constant . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 151
    optional_eol  go to state 17


State 145

   25 attr_stmt: . TOK_ATTRIBUTE TOK_ID constant EOL
   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 attr_list . switch_body TOK_END EOL
   56 attr_list: attr_list . attr_stmt
   58 switch_body: . switch_body TOK_CASE $@9 compare_list EOL case_body
   59            | . %empty  [TOK_CASE, TOK_END]

    TOK_ATTRIBUTE  shift, and go to state 9

    $default  reduce using rule 59 (switch_body)

    attr_stmt    go to state 152
    switch_body  go to state 153


State 146

   71 sync_list: sync_list TOK_SYNC TOK_ALWAYS EOL $@11 . update_list
   82 update_list: . update_list TOK_UPDATE sigspec sigspec EOL
   83            | . %empty

    $default  reduce using rule 83 (update_list)

    update_list  go to state 154


State 147

   73 sync_list: sync_list TOK_SYNC TOK_GLOBAL EOL $@12 . update_list
   82 update_list: . update_list TOK_UPDATE sigspec sigspec EOL
   83            | . %empty

    $default  reduce using rule 83 (update_list)

    update_list  go to state 155


State 148

   75 sync_list: sync_list TOK_SYNC TOK_INIT EOL $@13 . update_list
   82 update_list: . update_list TOK_UPDATE sigspec sigspec EOL
   83            | . %empty

    $default  reduce using rule 83 (update_list)

    update_list  go to state 156


State 149

   68 $@10: . %empty
   69 sync_list: sync_list TOK_SYNC sync_type sigspec EOL . $@10 update_list

    $default  reduce using rule 68 ($@10)

    $@10  go to state 157


State 150

   47 cell_body: cell_body TOK_PARAMETER TOK_SIGNED TOK_ID constant EOL .

    $default  reduce using rule 47 (cell_body)


State 151

   48 cell_body: cell_body TOK_PARAMETER TOK_REAL TOK_ID constant EOL .

    $default  reduce using rule 48 (cell_body)


State 152

   56 attr_list: attr_list attr_stmt .

    $default  reduce using rule 56 (attr_list)


State 153

   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 attr_list switch_body . TOK_END EOL
   58 switch_body: switch_body . TOK_CASE $@9 compare_list EOL case_body

    TOK_CASE  shift, and go to state 158
    TOK_END   shift, and go to state 159


State 154

   71 sync_list: sync_list TOK_SYNC TOK_ALWAYS EOL $@11 update_list .  [TOK_SYNC, TOK_END]
   82 update_list: update_list . TOK_UPDATE sigspec sigspec EOL

    TOK_UPDATE  shift, and go to state 160

    $default  reduce using rule 71 (sync_list)


State 155

   73 sync_list: sync_list TOK_SYNC TOK_GLOBAL EOL $@12 update_list .  [TOK_SYNC, TOK_END]
   82 update_list: update_list . TOK_UPDATE sigspec sigspec EOL

    TOK_UPDATE  shift, and go to state 160

    $default  reduce using rule 73 (sync_list)


State 156

   75 sync_list: sync_list TOK_SYNC TOK_INIT EOL $@13 update_list .  [TOK_SYNC, TOK_END]
   82 update_list: update_list . TOK_UPDATE sigspec sigspec EOL

    TOK_UPDATE  shift, and go to state 160

    $default  reduce using rule 75 (sync_list)


State 157

   69 sync_list: sync_list TOK_SYNC sync_type sigspec EOL $@10 . update_list
   82 update_list: . update_list TOK_UPDATE sigspec sigspec EOL
   83            | . %empty

    $default  reduce using rule 83 (update_list)

    update_list  go to state 161


State 158

   57 $@9: . %empty
   58 switch_body: switch_body TOK_CASE . $@9 compare_list EOL case_body

    $default  reduce using rule 57 ($@9)

    $@9  go to state 162


State 159

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty
   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 attr_list switch_body TOK_END . EOL

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 163
    optional_eol  go to state 17


State 160

   82 update_list: update_list TOK_UPDATE . sigspec sigspec EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 164


State 161

   69 sync_list: sync_list TOK_SYNC sync_type sigspec EOL $@10 update_list .  [TOK_SYNC, TOK_END]
   82 update_list: update_list . TOK_UPDATE sigspec sigspec EOL

    TOK_UPDATE  shift, and go to state 160

    $default  reduce using rule 69 (sync_list)


State 162

   58 switch_body: switch_body TOK_CASE $@9 . compare_list EOL case_body
   60 compare_list: . sigspec
   61             | . compare_list ',' sigspec
   62             | . %empty  [TOK_EOL, ',']
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    $default  reduce using rule 62 (compare_list)

    compare_list  go to state 165
    constant      go to state 47
    sigspec       go to state 166


State 163

   54 switch_stmt: TOK_SWITCH sigspec EOL $@8 attr_list switch_body TOK_END EOL .

    $default  reduce using rule 54 (switch_stmt)


State 164

   82 update_list: update_list TOK_UPDATE sigspec . sigspec EOL
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   89        | sigspec . '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '['         shift, and go to state 57
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 167


State 165

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   58 switch_body: switch_body TOK_CASE $@9 compare_list . EOL case_body
   61 compare_list: compare_list . ',' sigspec

    ','  shift, and go to state 168

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 169
    optional_eol  go to state 17


State 166

   60 compare_list: sigspec .  [TOK_EOL, ',']
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 60 (compare_list)


State 167

    3 EOL: . optional_eol TOK_EOL
    4 optional_eol: . optional_eol TOK_EOL
    5             | . %empty  [TOK_EOL]
   82 update_list: update_list TOK_UPDATE sigspec sigspec . EOL
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 5 (optional_eol)

    EOL           go to state 170
    optional_eol  go to state 17


State 168

   61 compare_list: compare_list ',' . sigspec
   84 constant: . TOK_VALUE
   85         | . TOK_INT
   86         | . TOK_STRING
   87 sigspec: . constant
   88        | . TOK_ID
   89        | . sigspec '[' TOK_INT ']'
   90        | . sigspec '[' TOK_INT ':' TOK_INT ']'
   91        | . '{' sigspec_list '}'

    TOK_ID      shift, and go to state 45
    TOK_VALUE   shift, and go to state 19
    TOK_STRING  shift, and go to state 20
    TOK_INT     shift, and go to state 21
    '{'         shift, and go to state 46

    constant  go to state 47
    sigspec   go to state 171


State 169

   58 switch_body: switch_body TOK_CASE $@9 compare_list EOL . case_body
   63 case_body: . case_body attr_stmt
   64          | . case_body switch_stmt
   65          | . case_body assign_stmt
   66          | . %empty

    $default  reduce using rule 66 (case_body)

    case_body  go to state 172


State 170

   82 update_list: update_list TOK_UPDATE sigspec sigspec EOL .

    $default  reduce using rule 82 (update_list)


State 171

   61 compare_list: compare_list ',' sigspec .  [TOK_EOL, ',']
   89 sigspec: sigspec . '[' TOK_INT ']'
   90        | sigspec . '[' TOK_INT ':' TOK_INT ']'

    '['  shift, and go to state 57

    $default  reduce using rule 61 (compare_list)


State 172

   25 attr_stmt: . TOK_ATTRIBUTE TOK_ID constant EOL
   54 switch_stmt: . TOK_SWITCH sigspec EOL $@8 attr_list switch_body TOK_END EOL
   58 switch_body: switch_body TOK_CASE $@9 compare_list EOL case_body .  [TOK_CASE, TOK_END]
   63 case_body: case_body . attr_stmt
   64          | case_body . switch_stmt
   65          | case_body . assign_stmt
   67 assign_stmt: . TOK_ASSIGN sigspec sigspec EOL

    TOK_SWITCH     shift, and go to state 100
    TOK_ASSIGN     shift, and go to state 101
    TOK_ATTRIBUTE  shift, and go to state 9

    $default  reduce using rule 58 (switch_body)

    attr_stmt    go to state 102
    switch_stmt  go to state 103
    assign_stmt  go to state 104
