//-------------------------------------------------------------------
// Copyright 2020 Carl-Johan Seger
// SPDX-License-Identifier: Apache-2.0
//-------------------------------------------------------------------
let USE_OBSOLETE = T;

load "ste.fl";

let simple =
    bit_input clk.
    bit_input a b c.
    bit_output o.
    bit_internal tmp mid.
    CELL "simple" [
        re_ff clk tmp mid,
        o <- '~' mid,
        tmp <- a '&' (b '|' c)
];

let ckt = pexlif2fsm (simple 'clk 'a 'b 'c 'o);

//let vis = STE_debug ckt;
//vis;

let ant = //(map (\i. bT,"clk", ((i%2=1)=>bT|bF), i, i+1) (0--10)) and
          "a" isv "1" from 0 to 2 and
          "b" isv "0" from 0 to 2 and 
          "c" isv "1" from 0 to 2 and
          "a" isv "1" from 2 to 4 and 
          "b" isv "0" from 2 to 4 and 
          "c" isv "0" from 2 to 4 and
          "a" isv "0" from 4 to 6 and 
          "b" isv "1" from 4 to 6 and 
          "c" isv "1" from 4 to 6
;

//bSTE "-e" vis [] ant [] [];
bSTE "-e" ckt [] ant [] [];

