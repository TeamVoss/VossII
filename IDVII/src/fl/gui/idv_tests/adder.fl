load "ste.fl";

TYPE "word" 8;

let full_adder =
    bit_input	a b cin.
    bit_output	sum cout.
    CELL "draw_hier full_adder" [
	sum <- a '^' b '^' cin,
	cout <- a '&' b '|' a '&' cin '|' b '&' cin
];

letrec map5 fn (a:as) (b:bs) (c:cs) (d:ds) (e:es) =
	    (fn a b c d e):(map5 fn as bs cs ds es)
 /\    map5 fn [] [] [] [] [] = []
 /\    map5 fn _ _ _ _ _ = error "List length mismatch in map5"
;

letrec ripple_adder =
    word_input			    a b.
    bit_input			    cin.
    word_output			    out.
    bit_output			    cout.
    //
    bit_list_internal (hw_size a)   mids.
    CELL "draw_hier ripple_adder" (
	(cout<- (hd mids)) :
	(map5 full_adder (tobits a) (tobits b) ((tl mids)@[cin])
			(tobits out) mids)
);


let adder_spec =
    word_input	a b.
    bit_input	cin.
    word_output	o.
    bit_output	cout.
    CELL "adder_spec" [
	ripple_adder a b cin o cout
];


let p = adder_spec 'a 'b 'cin 'o 'cout;
p fseq 1;

write_pexlif "adder_spec.pexlif" p;
//STE_debug (pexlif2fsm p);

//system "/bin/rm -rf DB";
//IDV "DB" [];

quit;
