load "ste.fl";

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------

// First we generate an 'comb/seq' split PINST to run our fold in.
let pex = gen_pinst [("inp",["inp"])] [("out",["out"])] 5 3;
(print "> Pexlif example:\n") fseq pex;

// Since we know the general layout of 'pex', we pick either the 'comb' or 'seq'
// part to fold on.
let node = random 1 2;
(print "> Node to fold:\n") fseq node;

// ...
let folded_pex = fold_pexlif pex [node] "folded";
(print "> Folded pexlif:\n") fseq folded_pex;

// ...
let unfolded_pex = unfold_pexlif folded_pex 1 "internal";
(print "> Unfolded pexlif:\n") fseq unfolded_pex;

// ...
let fp_of = find_fingerprint # pexlif_get_attrs;
(print "> FP still equal?\n") fseq ((fp_of pex) == (fp_of unfolded_pex));

//------------------------------------------------------------------------------
// Fin.