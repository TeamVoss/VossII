load "ste.fl";

//------------------------------------------------------------------------------
// Construct and store the necessary pexlifs for our isomatching example.
//------------------------------------------------------------------------------

let buf1 =
    bit_input a.
    bit_output out.
    bit_internal mid.
    CELL "draw_hier buf1" [
      mid <- '~' a,
      out <- '~' mid
    ];
let buf1_pex = buf1 'i1 'o1;
let buf1_sha = pexlif_get_SHA buf1_pex;
(printf "Store 'buf1' as \"%s\".\n" buf1_sha) fseq store_pexlif buf1_pex;

let buf2 =
    bit_input x.
    bit_output y.
    bit_internal mid.
    CELL "draw_hier buf2" [
      mid <- '~' x,
      y <- '~' mid
];
let buf2_pex = buf2 'i1 'o1;
let buf2_sha = pexlif_get_SHA buf2_pex;
(printf "Store 'buf2' as \"%s\".\n" buf2_sha) fseq store_pexlif buf2_pex;

let buf3 =
    bit_input a.
    bit_output out.
    bit_internal oink.
    CELL "draw_hier buf3" [
      oink <- '~' a,
      out <- '~' oink
    ];
let buf3_pex = buf3 'i1 'o1;
let buf3_sha = pexlif_get_SHA buf3_pex;
(printf "Store 'buf3' as \"%s\".\n" buf3_sha) fseq store_pexlif buf3_pex;

letrec inv_rec n =
    bit_input    a.
    bit_output  out.
    bit_internal mid.
    CELL "draw_hier inv_rec" (
      n = 1 => [ out <- '~' a ] |
      [
          mid <- '~' a,
          inv_rec (n-1) mid out
      ]);
let buf4 =
    bit_input    a.
    bit_output  out.
    CELL "buf4" [
        inv_rec 2 a out
    ];
let buf4_pex = buf4 'i1 'o1;
let buf4_sha = pexlif_get_SHA buf4_pex;
(printf "Store 'buf4' as \"%s\".\n" buf4_sha) fseq store_pexlif buf4_pex;

let haystack =
    bit_input a b c d e f.
    bit_output o1 o2 o3 o4 o5 o6 o7.
    bit_internal mid.
    CELL "draw_hier haystack" [
      buf1 a o1,
      buf2 b o2,
      buf3 c o3,
      inv_rec 2 d o4,
      buf4 e o5,
      mid <- '~' f,
      o6 <- '~' mid,
      o7 <- '~' mid
    ];
let haystack_pex = haystack 'i1 'i2 'i3 'i4 'i5 'i6 'o1 'o2 'o3 'o4 'o5 'o6 'o7;
let haystack_sha = pexlif_get_SHA haystack_pex;
(printf "Store 'haystack' as \"%s\".\n" haystack_sha) fseq store_pexlif haystack_pex;

//------------------------------------------------------------------------------
// Fin.