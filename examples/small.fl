load "examples/isomatch.fl";
load "ste.fl";

//------------------------------------------------------------------------------
// Load example files.

let g = verilog2pexlif "-Iexamples/verilog" "mux4" ["small.v","small_lib.v"] [];
//Emit_pexlif "puzzle.txt" g;

let p = verilog2pexlif "-Iexamples/verilog" "mux2" ["small_lib.v"] [];
//Emit_pexlif "piece.txt" p;

//------------------------------------------------------------------------------

// let a = flatten p;
// let b = adjacency_matrix a;
// let c = isomatch_matrix a a;
// recurse c b b (replicate (length b) F) 0;

//------------------------------------------------------------------------------

let g_f = flatten g;
let p_f = flatten p;
//
let g_m  = adjacency_matrix g_f;
let p_m  = adjacency_matrix p_f;
let m    = isomatch_matrix  p_f g_f; // V(P)xV(G)
let m_cs = replicate (length g_m) F; // Cols(M) of F
let row  = 0;
//
recurse m g_m p_m m_cs row;

//------------------------------------------------------------------------------

//(g_m) fseq ((p_m) fseq ());

//let xs = forall_ones m cons [];
//let ys = map (\i. forall_neighbors i p_m (cons) []) (map fst xs);
//let zs = map (\j. forall_neighbors j g_m (cons) []) (map snd xs);
//prune m g_m p_m;

//------------------------------------------------------------------------------
// Fin.