load "examples/isomatch.fl";
load "ste.fl";

//------------------------------------------------------------------------------
// Load example files.

let g_pex = verilog2pexlif "-Iexamples/verilog" "mux4" ["small.v"] [];
Emit_pexlif "puzzle.txt" g_pex;

let p_pex = verilog2pexlif "-Iexamples/verilog" "mymux2" ["small_lib.v"] [];
Emit_pexlif "piece.txt" p_pex;

//------------------------------------------------------------------------------

let g = adjacency_matrix g_pex;
let p = adjacency_matrix p_pex;
let m = isomatch_matrix  g_pex p_pex;
//let ms = recurse m g p;
//let ans = list2str T "\n" "\n==========\n" "\n" id (map (\n. recover n g_scheme p_scheme) ms);

//------------------------------------------------------------------------------

//let g' = val (g,_,cs) = adj_reduce "1" g_pex in (g:cs);
//let p' = val (p,_,cs) = adj_reduce "1" p_pex in (p:cs);

//------------------------------------------------------------------------------
// Fin.